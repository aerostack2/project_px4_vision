<%
# Input parameters
drone_namespace     = @settings["drone_namespace"]
micro_xrce_agent    = @settings["micro_xrce_agent"] == "true"
estimator_plugin    = @settings["estimator_plugin"]
use_gps             = @settings["use_gps"] == "true"
simulation          = @settings["simulation"] == "true"
instance            = @settings["instance"]

# Other parameters
behavior_type       = "position"
motion_controller_plugin = "pid_speed_controller"
if motion_controller_plugin == "differential_flatness_controller"
  behavior_type = "trajectory"
end

platform_config_file = "platform_config_external_odom.yaml"
if estimator_plugin == "raw_odometry"
  platform_config_file = "platform_config_odom.yaml"
end

if simulation
    config_path = "sim_config"
    fcu_url = "udp://:14540@127.0.0.1:14557"
else
    config_path = "real_config"
    fcu_url = "/dev/ttyACM0:57600"
end

if use_gps
    state_estimator_config_file = "state_estimator_gps.yaml"
else
    state_estimator_config_file = "state_estimator.yaml"
end

%>
attach: false
root: ./
windows:
<%- if micro_xrce_agent %>
  - micro_xrce_agent:
      layout: tiled
      panes:
    <%- if simulation %>
            - MicroXRCEAgent udp4 -p 8888
    <%- else %>
            - MicroXRCEAgent serial -b 921600 --dev /dev/ttyUSB0
    <%- end %>
<%- end %>
  - basics_robotics_functions:
      layout: tiled
      panes:
        - ros2 launch as2_platform_mavlink as2_platform_mavlink_launch.py
            namespace:=<%= drone_namespace %>
            platform_config_file:=<%= config_path %>/<%= platform_config_file %>
            fcu_url:=<%= fcu_url %>
        - ros2 launch as2_state_estimator state_estimator_launch.py
            namespace:=<%= drone_namespace %>
            plugin_name:=<%= estimator_plugin %>
            plugin_config_file:=<%= config_path %>/<%= state_estimator_config_file %>
        - ros2 launch as2_motion_controller controller_launch.py
            namespace:=<%= drone_namespace %>
            plugin_name:=<%= motion_controller_plugin %>
            motion_controller_config_file:=<%= config_path %>/motion_controller.yaml
            plugin_config_file:=<%= config_path %>/<%= motion_controller_plugin %>.yaml     
  - behaviors:
      layout:
      panes:
        - ros2 launch as2_behaviors_motion motion_behaviors_launch.py
            namespace:=<%= drone_namespace %>
            follow_path_plugin_name:=follow_path_plugin_<%= behavior_type %>
            go_to_plugin_name:=go_to_plugin_<%= behavior_type %>
            takeoff_plugin_name:=takeoff_plugin_<%= behavior_type %>
            land_plugin_name:=land_plugin_speed
        <%- if behavior_type == "differential_flatness_controller" %>
        - ros2 launch as2_behaviors_trajectory_generation generate_polynomial_trajectory_behavior_launch.py
            namespace:=<%= drone_namespace %>
        <%- end %>
  - mission:
      layout:
      panes:
        - ros2 run as2_alphanumeric_viewer as2_alphanumeric_viewer_node
            --ros-args -r  __ns:=/<%= drone_namespace %>
        - history -s 'python3 mission.py -n <%= drone_namespace %>' &&
          history -s 'python3 mission_swarm.py' &&
          echo Run here the mission
