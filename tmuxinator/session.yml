<%
# Input parameters
drone_namespace     = @settings["drone_namespace"]
gps                 = @settings["gps"] == "false"
simulation          = @settings["simulation"] == "true"
estimator_plugin    = @settings["estimator_plugin"]

# Other parameters
behavior_type               = "position"
motion_controller_plugin    = "pid_speed_controller"

if simulation
    config_path     = "sim_config"
    platform_config_file = "sim_config/platform_config.yaml"
else
    config_path     = "real_config"
    platform_config_file = "real_config/platform_config_odom.yaml"
end

if estimator_plugin == "mocap_pose"
    platform_config_file = "real_config/platform_config_mocap.yaml"
    state_estimator_config_file = "real_config/state_estimator_mocap.yaml"
elsif estimator_plugin == "raw_odometry"

    if gps and not simulation
        state_estimator_config_file = "real_config/state_estimator_gps.yaml"
    elsif gps and simulation
        state_estimator_config_file = "sim_config/state_estimator_gps.yaml"
    end

    if not gps and not simulation
        state_estimator_config_file = "real_config/state_estimator_odom.yaml"
    elsif not gps and simulation
        state_estimator_config_file = "sim_config/state_estimator_odom.yaml"
    end
end

%>
attach: false
root: ./
windows:
  - alphanumeric_viewer:
      layout: tiled
      panes:
        - ros2 run as2_alphanumeric_viewer as2_alphanumeric_viewer_node
            --ros-args -r  __ns:=/<%= drone_namespace %>
  - micro_xrce_agent:
      layout: tiled
      panes:
    <%- if simulation %>
            - MicroXRCEAgent udp4 -p 8888
    <%- else %>
            - MicroXRCEAgent serial -b 921600 --dev /dev/ttyUSB0
    <%- end %>
  - platform:
      layout: tiled
      panes:
        - ros2 launch as2_platform_pixhawk pixhawk_launch.py
            namespace:=<%= drone_namespace %>
            use_sim_time:=<%= simulation %>
            platform_config_file:=<%= platform_config_file %>
  - state_estimator:
      layout:
      panes:
        - ros2 launch as2_state_estimator state_estimator_launch.py
            namespace:=<%= drone_namespace %>
            use_sim_time:=<%= simulation %>
            plugin_name:=<%= estimator_plugin %>
            plugin_config_file:=<%= state_estimator_config_file %>
  - controller:
      layout:
      panes:
        - ros2 launch as2_motion_controller controller_launch.py
            namespace:=<%= drone_namespace %>
            use_sim_time:=<%= simulation %>
            plugin_name:=<%= motion_controller_plugin %>
            motion_controller_config_file:=<%= config_path %>/motion_controller.yaml
            plugin_config_file:=<%= config_path %>/<%= motion_controller_plugin %>.yaml        
  - behaviors:
      layout:
      panes:
        - ros2 launch as2_behaviors_motion motion_behaviors_launch.py
            namespace:=<%= drone_namespace %>
            use_sim_time:=<%= simulation %>
            follow_path_plugin_name:=follow_path_plugin_<%= behavior_type %>
            go_to_plugin_name:=go_to_plugin_<%= behavior_type %>
            takeoff_plugin_name:=takeoff_plugin_<%= behavior_type %>
            land_plugin_name:=land_plugin_speed
        <%- if behavior_type == "trajectory" %>
        - ros2 launch as2_behaviors_trajectory_generation generate_polynomial_trajectory_behavior_launch.py
            namespace:=<%= drone_namespace %>
            use_sim_time:=<%= simulation %>
        <%- end %>
  - mission:
      layout:
      panes:
        - 
